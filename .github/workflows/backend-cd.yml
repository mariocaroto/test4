nname: Backend continuous-deplpyment
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  
jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Install pipenv 
        run: pip install pipenv

      - name: Install dependencies
        run: cd starter/backend && pipenv install --dev

      - name: Test pipenv
        run: cd  /home/runner/work/test4/test4/starter/backend/ && pipenv run lint

  test:
    runs-on: ubuntu-latest    
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Install pipenv 
        run: pip install pipenv

      - name: Install dependencies
        run: cd  /home/runner/work/test4/test4/starter/backend/ && pipenv install

      - name: Test pipenv
        run: cd starter/backend && pipenv run test

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Install pipenv 
        run: pip install pipenv

      - name: Install dependencies
        run: cd starter/backend && pipenv install

        - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: us-east-1
  
      - name: Login to ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2
  
      - name: Build and push image to ECR
        env:
          REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          REPOSITORY: backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
  
      - name: Update kube config
        run: aws eks update-kubeconfig --name cluster
  
      - name: Set image tag to newer version
        run: kustomize edit set image $REPOSITORY=$REGISTRY/$REPOSITORY:$IMAGE_TAG
        env:
          REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          REPOSITORY: backend
          IMAGE_TAG: ${{ github.sha }}
        working-directory: starter/backend/k8s
  
      - name: Apply the manifests to the cluster
        run: kustomize build | kubectl apply -f -
        working-directory: starter/backend/k8s



